
// @include clamp('margin', (100px 10vw 200px, 150px 25vw 300px));
@mixin clamp($property, $sizes){
  $values: ();
  @each $size in $sizes {
    $clamp: ();
    @each $value in $size {
      $clamp: append($clamp, $value, $separator: comma);
    }
    $values: append($values, clamp(#{$clamp}));
  }
  #{$property}: $values;
}

// @include break('font-size', ('<large': 12px , '>=large': 50px));
/// Agnostic version
/// @mixin break($property, $sizes) {
  /// @each $breakpoint, $size in $sizes {
    ///@media #{$breakpoint}{
      /// #{$property}: $size;
    /// }
  /// }
/// }

@mixin break($property, $sizes) {
  @each $breakpoint, $size in $sizes {
    @include media(#{$breakpoint}){
      #{$property}: $size;
    }
  }
}

@mixin static($class, $property, $min, $max, $unit: 'px', $step: 1, $factor: 1){
  @if $min < 0 or $max < 0 or $max < $min {
    @error "$min and $max values must be > 0 and $max > $min";
  }
  @if $step <= 0 {
    @error "$step > 0";
  }
  @for $i from $min through $max {
    @if $i % $step == 0 {
      .#{$class}-#{$i*$factor}{
        #{$property}: #{$i*$factor}#{$unit}
      }
    }
  }
}